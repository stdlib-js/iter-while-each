{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert-is-function';\nimport isIteratorLike from '@stdlib/assert-is-iterator-like';\nimport iteratorSymbol from '@stdlib/symbol-iterator';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Returns an iterator which invokes a function for each iterated value before returning the iterated value until either a predicate function returns `false` or the iterator has iterated over all values.\n*\n* @param {Iterator} iterator - input iterator\n* @param {Function} predicate - function which indicates whether to continue iterating\n* @param {Function} fcn - function to invoke\n* @param {*} [thisArg] - execution context\n* @throws {TypeError} first argument must be an iterator protocol-compliant object\n* @throws {TypeError} second argument must be a function\n* @throws {TypeError} third argument must be a function\n* @returns {Iterator} iterator\n*\n* @example\n* import array2iterator from '@stdlib/array-to-iterator';\n* import iterWhileEach from '@stdlib/iter-while-each';\n*\n* function predicate( v ) {\n*     return v < 3;\n* }\n*\n* function assert( v ) {\n*     if ( v !== v ) {\n*         throw new Error( 'should not be NaN' );\n*     }\n* }\n*\n* var it = iterWhileEach( array2iterator( [ 1, 2, 3, 4 ] ), predicate, assert );\n* // returns {}\n*\n* var r = it.next().value;\n* // returns 1\n*\n* r = it.next().value;\n* // returns 2\n*\n* r = it.next().value;\n* // undefined\n*\n* // ...\n*/\nfunction iterWhileEach( iterator, predicate, fcn, thisArg ) {\n\tvar iter;\n\tvar FLG;\n\tvar i;\n\tif ( !isIteratorLike( iterator ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an iterator protocol-compliant object. Value: `%s`.', iterator ) );\n\t}\n\tif ( !isFunction( predicate ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', predicate ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\ti = -1;\n\n\t// Create an iterator protocol-compliant object:\n\titer = {};\n\tsetReadOnly( iter, 'next', next );\n\tsetReadOnly( iter, 'return', end );\n\n\t// If an environment supports `Symbol.iterator`, make the iterator iterable:\n\tif ( iteratorSymbol && isFunction( iterator[ iteratorSymbol ] ) ) {\n\t\tsetReadOnly( iter, iteratorSymbol, factory );\n\t}\n\treturn iter;\n\n\t/**\n\t* Returns an iterator protocol-compliant object containing the next iterated value.\n\t*\n\t* @private\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction next() {\n\t\tvar v;\n\t\ti += 1;\n\t\tif ( FLG ) {\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tv = iterator.next();\n\t\tif ( v.done ) {\n\t\t\tFLG = true;\n\t\t\treturn v;\n\t\t}\n\t\tv = v.value;\n\t\tif ( predicate( v, i ) === false ) {\n\t\t\tFLG = true;\n\t\t\treturn {\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\tfcn.call( thisArg, v, i );\n\t\treturn {\n\t\t\t'value': v,\n\t\t\t'done': false\n\t\t};\n\t}\n\n\t/**\n\t* Finishes an iterator.\n\t*\n\t* @private\n\t* @param {*} [value] - value to return\n\t* @returns {Object} iterator protocol-compliant object\n\t*/\n\tfunction end( value ) {\n\t\tFLG = true;\n\t\tif ( arguments.length ) {\n\t\t\treturn {\n\t\t\t\t'value': value,\n\t\t\t\t'done': true\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\t'done': true\n\t\t};\n\t}\n\n\t/**\n\t* Returns a new iterator.\n\t*\n\t* @private\n\t* @returns {Iterator} iterator\n\t*/\n\tfunction factory() {\n\t\treturn iterWhileEach( iterator[ iteratorSymbol ](), predicate, fcn, thisArg ); // eslint-disable-line max-len\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterWhileEach;\n"],"names":["iterWhileEach","iterator","predicate","fcn","thisArg","iter","FLG","i","isIteratorLike","TypeError","format","isFunction","setReadOnly","v","done","next","value","call","arguments","length","iteratorSymbol"],"mappings":";;yeAuEA,SAASA,EAAeC,EAAUC,EAAWC,EAAKC,GACjD,IAAIC,EACAC,EACAC,EACJ,IAAMC,EAAgBP,GACrB,MAAM,IAAIQ,UAAWC,EAAQ,+FAAgGT,IAE9H,IAAMU,EAAYT,GACjB,MAAM,IAAIO,UAAWC,EAAQ,qEAAsER,IAEpG,IAAMS,EAAYR,GACjB,MAAM,IAAIM,UAAWC,EAAQ,oEAAqEP,IAanG,OAXAI,GAAK,EAILK,EADAP,EAAO,CAAA,EACY,QAenB,WACC,IAAIQ,EAEJ,GADAN,GAAK,EACAD,EACJ,MAAO,CACNQ,MAAQ,GAIV,IADAD,EAAIZ,EAASc,QACND,KAEN,OADAR,GAAM,EACCO,EAGR,GADAA,EAAIA,EAAEG,OACqB,IAAtBd,EAAWW,EAAGN,GAElB,OADAD,GAAM,EACC,CACNQ,MAAQ,GAIV,OADAX,EAAIc,KAAMb,EAASS,EAAGN,GACf,CACNS,MAASH,EACTC,MAAQ,EAET,IAvCDF,EAAaP,EAAM,UAgDnB,SAAcW,GAEb,GADAV,GAAM,EACDY,UAAUC,OACd,MAAO,CACNH,MAASA,EACTF,MAAQ,GAGV,MAAO,CACNA,MAAQ,EAET,IAxDIM,GAAkBT,EAAYV,EAAUmB,KAC5CR,EAAaP,EAAMe,GA+DpB,WACC,OAAOpB,EAAeC,EAAUmB,KAAoBlB,EAAWC,EAAKC,EACpE,IA/DMC,CAgER"}